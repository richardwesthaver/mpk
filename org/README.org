#+TITLE: mpk
#+DATE: 2022-06-11
#+AUTHOR: ellis
#+EMAIL: ellis@rwest.io
#+DESCRIPTION: Media Programming Kit
#+OPTIONS: ^:{} e:t f:t timestamp:t toc:nil num:nil
- what \\
  /Media Programming Kit/ -- a development kit for digital media.

  - repl
  - media db
  - groove box
  - sesh mgmt
  - makes
    - a/v installations
    - interactive envs
    - generative art

  - status: =ALPHA= \\
  This project is in early stages and will only deal with audio for
  quite some time. There are future plans for image/video/text
  support.
- why \\
  - full control over media production pipeline
  - multi-client scripting environment
    - UDP:OSC/MIDI/QUIC, TCP:HTTP/S
    - p2p, 1:1, 1:n, broadcast
    - deploy on lan or broadband
  - hackable, FOSS
* usage
MPK is meant to be used on a Linux box. In this example we'll be using
Arch Linux.

MPK also runs on MacOS but some of the project management
functionality isn't available. Most notably, you can't run the [[https://new-session-manager.jackaudio.org][NSM]]
server on MacOS, but you can still interact with one remotely. All
other features are supported on both platforms.
** install
First install the dependencies:
#+begin_src shell
  # install rustup
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  rustup default nightly

  # for processing analysis files
  curl https://essentia.upf.edu/extractors/essentia-extractors-v2.1_beta2-linux-x86_64.tar.gz -o essentia-extractors.tar.gz
  tar -xf essentia-extractors.tar.gz essentia-extractors-v2.1_beta2/{streaming_extractor_freesound,streaming_extractor_music}
  mv essentia-extractors-v2.1_beta2/{streaming_extractor_freesound,streaming_extractor_music} /usr/local/bin/ && rm -r essentia-extractors-v2.1_beta2

  sudo pacman -S nim alsa-lib jack2 ffmpeg new-session-manager supercollider
#+end_src

then install the apps:
#+begin_src shell
make
#+end_src
** init
Once the binary is installed run =mpk init= to initialize the app
directories at =~/mpk= as well as the database and TOML config file.

#+begin_src shell :exports results :results code
ls ~/mpk
#+end_src
#+RESULTS:
#+begin_src shell
mpk.toml
db
analysis
patches
plugins
sesh
samples
tracks
#+end_src
** config
The default =mpk.toml= config file looks like this:
#+begin_src conf-toml
[fs]
root = '~/mpk'

[db]
path = '~/mpk/db'
mode = 'Fast'
cache_capacity = 1073741824
print_on_drop = false
use_compression = false
compression_factor = 5

[jack]
name = 'mpk'
audio = 'alsa'
midi = 'seq'
device = 'default'
realtime = true
autoconnect = ' '
temp = false
rate = 44100
period = 1024
n_periods = 2

[metro]
bpm = 120
time_sig = [
    4,
    4,
]

[sesh]
client_addr = '127.0.0.1:0'

[net]
socket = '127.0.0.1:0'

[engine]
socket = '127.0.0.1:0'

[gear]
#+end_src
Much of the configuration can be overridden by CLI flags but you may
want to change some of the default values. Some of the optional
settings aren't included in the default file:
- fs.{=ext_samples=, =ext_tracks=, =ext_projects=, =ext_plugins=, =ext_patches=}
- gear.{=octatrack=, =analog_rytm=, =op_1=}
- metro.{=tic=, =toc=}
- net.{=freesound=, =musicbrainz=, =youtube=, =spotify=}.{=client_id=, =client_secret=, =redirect_url=}
* dependencies
#+begin_src 
*: use your OS package manager
?: optional
#+end_src
- [[https://www.rust-lang.org/tools/install][Rust]]
- [[https://llvm.org/][LLVM]]*
- [[https://jackaudio.org/][JACK]]*?
- [[https://new-session-manager.jackaudio.org][NSM]]*?
